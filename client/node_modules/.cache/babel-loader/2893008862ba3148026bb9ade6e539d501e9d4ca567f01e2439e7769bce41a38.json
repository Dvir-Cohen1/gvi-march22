{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"../../../services/auth.service\";\nconst loginByEmailAndPassword = createAsyncThunk(\"auth/loginByEmailAndPassword\", async (email, password) => {\n  const response = await authService.login(email, password);\n  return response.data;\n});\nconst initialState = {\n  // isLoading: false,\n  isAuth: false,\n  error: \"\"\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    login: async (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      try {\n        // state.isLoading = true;\n        const response = await authService.login(payload.email, payload.password);\n        console.log(response);\n        state.isAuth = true;\n      } catch (error) {\n        state.isAuth = false;\n        state.error = \"Email or password incorrect\";\n      }\n      // state.isLoading = false;\n    }\n  }\n});\n\nexport const {\n  login\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","loginByEmailAndPassword","email","password","response","login","data","initialState","isAuth","error","authSlice","name","reducers","state","payload","console","log","actions","reducer"],"sources":["/Users/tomer/Desktop/Lecturers/INT/March 22/gvi-march22/client/src/app/redux/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"../../../services/auth.service\";\n\nconst loginByEmailAndPassword = createAsyncThunk(\n  \"auth/loginByEmailAndPassword\",\n  async (email, password) => {\n    const response = await authService.login(email, password);\n    return response.data;\n  }\n);\n\nconst initialState = {\n  // isLoading: false,\n  isAuth: false,\n  error: \"\",\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    login: async (state, { payload }) => {\n      try {\n        // state.isLoading = true;\n        const response = await authService.login(\n          payload.email,\n          payload.password\n        );\n        console.log(response);\n        state.isAuth = true;\n      } catch (error) {\n        state.isAuth = false;\n        state.error = \"Email or password incorrect\";\n      }\n      // state.isLoading = false;\n    },\n  },\n});\n\nexport const { login } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,WAAW,MAAM,gCAAgC;AAExD,MAAMC,uBAAuB,GAAGF,gBAAgB,CAC9C,8BAA8B,EAC9B,OAAOG,KAAK,EAAEC,QAAQ,KAAK;EACzB,MAAMC,QAAQ,GAAG,MAAMJ,WAAW,CAACK,KAAK,CAACH,KAAK,EAAEC,QAAQ,CAAC;EACzD,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC,CACF;AAED,MAAMC,YAAY,GAAG;EACnB;EACAC,MAAM,EAAE,KAAK;EACbC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGZ,WAAW,CAAC;EAC5Ba,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRP,KAAK,EAAE,OAAOQ,KAAK,WAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC;MAC9B,IAAI;QACF;QACA,MAAMV,QAAQ,GAAG,MAAMJ,WAAW,CAACK,KAAK,CACtCS,OAAO,CAACZ,KAAK,EACbY,OAAO,CAACX,QAAQ,CACjB;QACDY,OAAO,CAACC,GAAG,CAACZ,QAAQ,CAAC;QACrBS,KAAK,CAACL,MAAM,GAAG,IAAI;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdI,KAAK,CAACL,MAAM,GAAG,KAAK;QACpBK,KAAK,CAACJ,KAAK,GAAG,6BAA6B;MAC7C;MACA;IACF;EACF;AACF,CAAC,CAAC;;AAEF,OAAO,MAAM;EAAEJ;AAAM,CAAC,GAAGK,SAAS,CAACO,OAAO;AAC1C,eAAeP,SAAS,CAACQ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}