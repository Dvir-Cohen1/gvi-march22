{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"../../../services/auth.service\";\nexport const loginByEmailAndPassword = createAsyncThunk(\"auth/loginByEmailAndPassword\", async (values, password) => {\n  const response = await authService.login(values.email, values.password);\n  return response.data;\n});\nconst initialState = {\n  isLoading: false,\n  isAuth: false,\n  error: \"\"\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [loginByEmailAndPassword.pending]: (state, action) => {\n      state.isLoading = true;\n      state.error = \"\";\n      state.isAuth = false;\n    },\n    [loginByEmailAndPassword.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.isAuth = false;\n      state.error = \"Email or Password Invalid.\";\n    },\n    [loginByEmailAndPassword.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.error = \"\";\n      state.isAuth = true;\n      console.log(action);\n    }\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","loginByEmailAndPassword","values","password","response","login","email","data","initialState","isLoading","isAuth","error","authSlice","name","reducers","extraReducers","pending","state","action","rejected","fulfilled","console","log","reducer"],"sources":["/Users/tomer/Desktop/Lecturers/INT/March 22/gvi-march22/client/src/app/redux/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"../../../services/auth.service\";\n\nexport const loginByEmailAndPassword = createAsyncThunk(\n  \"auth/loginByEmailAndPassword\",\n  async (values, password) => {\n    const response = await authService.login(values.email, values.password);\n    return response.data;\n  }\n);\n\nconst initialState = {\n  isLoading: false,\n  isAuth: false,\n  error: \"\",\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [loginByEmailAndPassword.pending]: (state, action) => {\n      state.isLoading = true;\n      state.error = \"\";\n      state.isAuth = false;\n    },\n    [loginByEmailAndPassword.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.isAuth = false;\n      state.error = \"Email or Password Invalid.\";\n    },\n    [loginByEmailAndPassword.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.error = \"\";\n      state.isAuth = true;\n\n      console.log(action);\n    },\n  },\n});\n\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,WAAW,MAAM,gCAAgC;AAExD,OAAO,MAAMC,uBAAuB,GAAGF,gBAAgB,CACrD,8BAA8B,EAC9B,OAAOG,MAAM,EAAEC,QAAQ,KAAK;EAC1B,MAAMC,QAAQ,GAAG,MAAMJ,WAAW,CAACK,KAAK,CAACH,MAAM,CAACI,KAAK,EAAEJ,MAAM,CAACC,QAAQ,CAAC;EACvE,OAAOC,QAAQ,CAACG,IAAI;AACtB,CAAC,CACF;AAED,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,KAAK;EAChBC,MAAM,EAAE,KAAK;EACbC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGd,WAAW,CAAC;EAC5Be,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAE;IACb,CAACd,uBAAuB,CAACe,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;MACpDD,KAAK,CAACR,SAAS,GAAG,IAAI;MACtBQ,KAAK,CAACN,KAAK,GAAG,EAAE;MAChBM,KAAK,CAACP,MAAM,GAAG,KAAK;IACtB,CAAC;IACD,CAACT,uBAAuB,CAACkB,QAAQ,GAAG,CAACF,KAAK,EAAEC,MAAM,KAAK;MACrDD,KAAK,CAACR,SAAS,GAAG,KAAK;MACvBQ,KAAK,CAACP,MAAM,GAAG,KAAK;MACpBO,KAAK,CAACN,KAAK,GAAG,4BAA4B;IAC5C,CAAC;IACD,CAACV,uBAAuB,CAACmB,SAAS,GAAG,CAACH,KAAK,EAAEC,MAAM,KAAK;MACtDD,KAAK,CAACR,SAAS,GAAG,KAAK;MACvBQ,KAAK,CAACN,KAAK,GAAG,EAAE;MAChBM,KAAK,CAACP,MAAM,GAAG,IAAI;MAEnBW,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;IACrB;EACF;AACF,CAAC,CAAC;AAEF,eAAeN,SAAS,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}