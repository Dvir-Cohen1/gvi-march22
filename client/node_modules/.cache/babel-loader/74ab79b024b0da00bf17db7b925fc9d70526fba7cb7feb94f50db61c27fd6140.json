{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"../../../services/auth.service\";\nconst loginByEmailAndPassword = createAsyncThunk(\"auth/loginByEmailAndPassword\", async (email, password) => {\n  const response = await authService.login(email, password);\n  return response.data;\n});\nconst initialState = {\n  isLoading: false,\n  isAuth: false,\n  error: \"\"\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    // login: async (state, { payload }) => {\n    //   try {\n    //     // state.isLoading = true;\n    //     const response = await authService.login(\n    //       payload.email,\n    //       payload.password\n    //     );\n    //     console.log(response);\n    //     state.isAuth = true;\n    //   } catch (error) {\n    //     state.isAuth = false;\n    //     state.error = \"Email or password incorrect\";\n    //   }\n    //   // state.isLoading = false;\n    // },\n  },\n  extraReducers: {\n    [loginByEmailAndPassword.pending]: (state, action) => {\n      state.isLoading = true;\n      state.error = \"\";\n      state.isAuth = false;\n    },\n    [loginByEmailAndPassword.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.isAuth = false;\n      state.error = \"Email or Password Invalid.\";\n    }\n  }\n});\nexport const {\n  login\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","loginByEmailAndPassword","email","password","response","login","data","initialState","isLoading","isAuth","error","authSlice","name","reducers","extraReducers","pending","state","action","rejected","actions","reducer"],"sources":["/Users/tomer/Desktop/Lecturers/INT/March 22/gvi-march22/client/src/app/redux/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"../../../services/auth.service\";\n\nconst loginByEmailAndPassword = createAsyncThunk(\n  \"auth/loginByEmailAndPassword\",\n  async (email, password) => {\n    const response = await authService.login(email, password);\n    return response.data;\n  }\n);\n\nconst initialState = {\n  isLoading: false,\n  isAuth: false,\n  error: \"\",\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    // login: async (state, { payload }) => {\n    //   try {\n    //     // state.isLoading = true;\n    //     const response = await authService.login(\n    //       payload.email,\n    //       payload.password\n    //     );\n    //     console.log(response);\n    //     state.isAuth = true;\n    //   } catch (error) {\n    //     state.isAuth = false;\n    //     state.error = \"Email or password incorrect\";\n    //   }\n    //   // state.isLoading = false;\n    // },\n  },\n  extraReducers: {\n    [loginByEmailAndPassword.pending]: (state, action) => {\n      state.isLoading = true;\n      state.error = \"\";\n      state.isAuth = false;\n    },\n    [loginByEmailAndPassword.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.isAuth = false;\n      state.error = \"Email or Password Invalid.\";\n    },\n  },\n});\n\nexport const { login } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,WAAW,MAAM,gCAAgC;AAExD,MAAMC,uBAAuB,GAAGF,gBAAgB,CAC9C,8BAA8B,EAC9B,OAAOG,KAAK,EAAEC,QAAQ,KAAK;EACzB,MAAMC,QAAQ,GAAG,MAAMJ,WAAW,CAACK,KAAK,CAACH,KAAK,EAAEC,QAAQ,CAAC;EACzD,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC,CACF;AAED,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,KAAK;EAChBC,MAAM,EAAE,KAAK;EACbC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGb,WAAW,CAAC;EAC5Bc,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACD;EACDC,aAAa,EAAE;IACb,CAACb,uBAAuB,CAACc,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;MACpDD,KAAK,CAACR,SAAS,GAAG,IAAI;MACtBQ,KAAK,CAACN,KAAK,GAAG,EAAE;MAChBM,KAAK,CAACP,MAAM,GAAG,KAAK;IACtB,CAAC;IACD,CAACR,uBAAuB,CAACiB,QAAQ,GAAG,CAACF,KAAK,EAAEC,MAAM,KAAK;MACrDD,KAAK,CAACR,SAAS,GAAG,KAAK;MACvBQ,KAAK,CAACP,MAAM,GAAG,KAAK;MACpBO,KAAK,CAACN,KAAK,GAAG,4BAA4B;IAC5C;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEL;AAAM,CAAC,GAAGM,SAAS,CAACQ,OAAO;AAC1C,eAAeR,SAAS,CAACS,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}