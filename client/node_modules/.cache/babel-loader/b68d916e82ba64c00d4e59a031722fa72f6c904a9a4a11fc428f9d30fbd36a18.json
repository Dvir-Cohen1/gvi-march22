{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"../../../services/auth.service\";\nexport const loginByEmailAndPassword = createAsyncThunk(\"auth/loginByEmailAndPassword\", async values => {\n  const response = await authService.login(values.email, values.password);\n  return response.data;\n});\nconst initialState = {\n  isLoading: false,\n  isAuth: false,\n  error: \"\"\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    clearErrorMessage: state => {\n      state.error = \"\";\n    }\n  },\n  extraReducers: {\n    [loginByEmailAndPassword.pending]: (state, action) => {\n      state.isLoading = true;\n      state.error = \"\";\n      state.isAuth = false;\n    },\n    [loginByEmailAndPassword.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.isAuth = false;\n      state.error = \"Email or Password Invalid.\";\n    },\n    [loginByEmailAndPassword.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.error = \"\";\n      state.isAuth = true;\n      console.log(action);\n    }\n  }\n});\nexport const {\n  clearErrorMessage\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","loginByEmailAndPassword","values","response","login","email","password","data","initialState","isLoading","isAuth","error","authSlice","name","reducers","clearErrorMessage","state","extraReducers","pending","action","rejected","fulfilled","console","log","actions","reducer"],"sources":["/Users/tomer/Desktop/Lecturers/INT/March 22/gvi-march22/client/src/app/redux/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"../../../services/auth.service\";\n\nexport const loginByEmailAndPassword = createAsyncThunk(\n  \"auth/loginByEmailAndPassword\",\n  async (values) => {\n    const response = await authService.login(values.email, values.password);\n    return response.data;\n  }\n);\n\nconst initialState = {\n  isLoading: false,\n  isAuth: false,\n  error: \"\",\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    clearErrorMessage: (state) => {\n      state.error = \"\";\n    },\n  },\n  extraReducers: {\n    [loginByEmailAndPassword.pending]: (state, action) => {\n      state.isLoading = true;\n      state.error = \"\";\n      state.isAuth = false;\n    },\n    [loginByEmailAndPassword.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.isAuth = false;\n      state.error = \"Email or Password Invalid.\";\n    },\n    [loginByEmailAndPassword.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.error = \"\";\n      state.isAuth = true;\n\n      console.log(action);\n    },\n  },\n});\n\nexport const { clearErrorMessage } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,WAAW,MAAM,gCAAgC;AAExD,OAAO,MAAMC,uBAAuB,GAAGF,gBAAgB,CACrD,8BAA8B,EAC9B,MAAOG,MAAM,IAAK;EAChB,MAAMC,QAAQ,GAAG,MAAMH,WAAW,CAACI,KAAK,CAACF,MAAM,CAACG,KAAK,EAAEH,MAAM,CAACI,QAAQ,CAAC;EACvE,OAAOH,QAAQ,CAACI,IAAI;AACtB,CAAC,CACF;AAED,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,KAAK;EAChBC,MAAM,EAAE,KAAK;EACbC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGd,WAAW,CAAC;EAC5Be,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,iBAAiB,EAAGC,KAAK,IAAK;MAC5BA,KAAK,CAACL,KAAK,GAAG,EAAE;IAClB;EACF,CAAC;EACDM,aAAa,EAAE;IACb,CAAChB,uBAAuB,CAACiB,OAAO,GAAG,CAACF,KAAK,EAAEG,MAAM,KAAK;MACpDH,KAAK,CAACP,SAAS,GAAG,IAAI;MACtBO,KAAK,CAACL,KAAK,GAAG,EAAE;MAChBK,KAAK,CAACN,MAAM,GAAG,KAAK;IACtB,CAAC;IACD,CAACT,uBAAuB,CAACmB,QAAQ,GAAG,CAACJ,KAAK,EAAEG,MAAM,KAAK;MACrDH,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACN,MAAM,GAAG,KAAK;MACpBM,KAAK,CAACL,KAAK,GAAG,4BAA4B;IAC5C,CAAC;IACD,CAACV,uBAAuB,CAACoB,SAAS,GAAG,CAACL,KAAK,EAAEG,MAAM,KAAK;MACtDH,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACL,KAAK,GAAG,EAAE;MAChBK,KAAK,CAACN,MAAM,GAAG,IAAI;MAEnBY,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;IACrB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ;AAAkB,CAAC,GAAGH,SAAS,CAACY,OAAO;AACtD,eAAeZ,SAAS,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}